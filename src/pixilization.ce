output pico Set_Title _("Pixilization")
output pico Set_Size ((804,404),(201,101))
output pico Set_Auto False

type rec Houses {
    House: ((Int,Int), Houses)
}

var houses: Houses = House ((0,0), $Houses)
var last: \Houses = \houses

loop {
    output pico Clear

    -- draw all pixels
    {
        var cur: \Houses = \houses
        loop {
            output pico Draw_Pixel (cur\.House!.1)
            set cur = \ cur\.House!.2
            if cur\.$Houses? {
                break
            }
        }
    }

    -- add random pixel
    {
        var x: Int = ?
        var y: Int = ?
        loop {
            set x = _(random()%201 - 100)
            set y = _(random()%101 -  50)

            var ok: Bool = True
            var cur: \Houses = \houses
            loop {
                var xx: Int = cur\.House!.1.1
                var yy: Int = cur\.House!.1.2
                if bool _(x==xx && y==yy) {
                    set ok = False
                    native _{printf("IGUAL\n");}
                    break
                }
                set cur = \ cur\.House!.2
                if cur\.$Houses? {
                    break
                }
            }
            if ok {
                break
            }
        }
        set last\.House!.2 = House ((x,y), $Houses)
        set last = \last\.House!.2
    }

    output pico Present
    input pico Delay 100
}
